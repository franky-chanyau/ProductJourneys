{
  "id": 1,
  "parentId": -1,
  "label": "snippets",
  "lastId": 4,
  "children": [
    {
      "id": 3,
      "parentId": 1,
      "label": "Scaffolds",
      "folder": true,
      "children": [
        {
          "id": 4,
          "parentId": 3,
          "label": "TS Function Component",
          "value": "import * as React from 'react';\nimport css from 'styled-jsx/css';\nimport cx, { Argument } from 'classnames';\n\nexport interface ${1:d}Props {\n    children?: React.ReactNode;\n    className?: Argument;\n}\n\nexport default function UIButton({ children = '', className }: UIButtonProps) {\n    return (\n        <>\n            <button type=\"button\" className={cx('UIButton', className)}>{children}</button>\n            <style jsx>{styles}</style>\n        </>\n    );\n}\n\nconst styles = css`\n    .UIButton{\n        @apply inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500;\n    }\n`;",
          "children": [],
          "resolveSyntax": true
        }
      ]
    },
    {
      "id": 2,
      "parentId": 1,
      "label": "Generic Function Component__(ws)",
      "value": "import * as React from 'react';\nimport css from 'styled-jsx/css';\nimport cx, { Argument } from 'classnames';\n\nexport interface UIButtonProps {\n    children?: React.ReactNode;\n    className?: Argument;\n}\n\nexport default function UIButton({ children = '', className }: UIButtonProps) {\n    return (\n        <>\n            <button type=\"button\" className={cx('UIButton', className)}>{children}</button>\n            <style jsx>{UIButtonStyles}</style>\n        </>\n    );\n}\n\nconst UIButtonStyles = css`\n    .UIButton{\n    }\n`;",
      "children": [],
      "resolveSyntax": true
    }
  ]
}
